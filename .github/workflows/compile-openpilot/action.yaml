name: 'compile openpilot'

inputs:
  push:
    description: 'push scons cache'
    required: false
    default: 'false'
  flags:
    description: 'additional scons flags'
    required: false
    default: ''

runs:
  using: "composite"
  steps:
    - id: restore-scons-cache
      uses: ./.github/workflows/auto-cache
      with:
        push: ${{ inputs.push != 'false' }}
        path: .ci_cache/scons_cache
        key: scons-${{ runner.arch }}-${{ env.CACHE_COMMIT_DATE }}-${{ github.sha }}
        restore-keys: |
          scons-${{ runner.arch }}-${{ env.CACHE_COMMIT_DATE }}
          scons-${{ runner.arch }}
    - shell: bash
      name: build openpilot with desired flags
      timeout-minutes: ${{ ((steps.restore-scons-cache.outputs.cache-hit == 'true') && 15 || 30) }} # allow more time when we missed the scons cache
      run: |
        ${{ env.RUN }} "scons -j$(nproc) ${{ inputs.flags }}"
        ${{ env.RUN }} "release/check-dirty.sh"
    - shell: bash
      name: cleanup cache and rebuild for minimizing pushed cache
      if: ${{ inputs.push != 'false' }}
      run: |
          ${{ env.RUN }} "rm -rf /tmp/scons_cache/* && \
                          scons -j$(nproc) --cache-populate"
